// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace cubido.OpenApi.Angular.Template.Generated
{
    using cubido.OpenApi.Angular.Extensions;
    using cubido.OpenApi.Angular.Template.Generated;
    using cubido.OpenApi.Extensions;
    using cubido.OpenApi.Models;
    using cubido.OpenApi.Models.Types;
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using System.Text.RegularExpressions;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class Service : ServiceBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("// Generated by OpenApi Angular Generator (c) by cubido business solutions gmbh 2" +
                    "017\r\n");
            
            #line 2 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Header.tt"

if(options.IncludeGenerationTimestamp)
{

            
            #line default
            #line hidden
            this.Write("// Time of generation: ");
            
            #line 6 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Header.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToString("F")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 7 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Header.tt"

}

            
            #line default
            #line hidden
            this.Write(@"import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
// tslint:disable-next-line:no-unused-variable
import { map } from 'rxjs/operators';
// tslint:disable-next-line:no-unused-variable
import { ServiceHelper } from 'app/");
            
            #line 21 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(options.HelpersDirectoryName));
            
            #line default
            #line hidden
            this.Write("/service-helper\';\r\n");
            
            #line 22 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

if (options.HasBaseUrl)
{

            
            #line default
            #line hidden
            this.Write("import { environment } from \'environments/environment\';\r\n");
            
            #line 27 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

}
foreach (var model in controller.ReferencedModels.OrderBy(model1 => model1.Name))
{

            
            #line default
            #line hidden
            this.Write("import { ");
            
            #line 32 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.GetImportSelector()));
            
            #line default
            #line hidden
            this.Write(" } from \'");
            
            #line 32 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(options.ModelsRelativePath));
            
            #line default
            #line hidden
            
            #line 32 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.GetFilename()));
            
            #line default
            #line hidden
            this.Write("\';\r\n");
            
            #line 33 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

}

            
            #line default
            #line hidden
            
            #line 36 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

if (options.HasBaseUrl)
{

            
            #line default
            #line hidden
            this.Write("\r\nconst BASE_URL = environment.");
            
            #line 41 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(options.BaseUrl));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 42 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 46 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

if (!String.IsNullOrWhiteSpace(controller.Description))
{

            
            #line default
            #line hidden
            this.Write("/**\r\n * ");
            
            #line 51 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(controller.Description));
            
            #line default
            #line hidden
            this.Write("\r\n */\r\n");
            
            #line 53 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

}

            
            #line default
            #line hidden
            this.Write("@Injectable()\r\nexport class ");
            
            #line 57 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(controller.Name.ToUpperCamelCase()));
            
            #line default
            #line hidden
            this.Write("Service {\r\n\r\n  constructor(private http: HttpClient) {}\r\n");
            
            #line 60 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

foreach (var operation in controller.Operations) 
{

            
            #line default
            #line hidden
            this.Write("\r\n  // ");
            
            #line 65 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.HttpMethod.ToString().ToUpper()));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 65 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Path));
            
            #line default
            #line hidden
            this.Write("\r\n  /**\r\n");
            
            #line 67 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    if (!String.IsNullOrWhiteSpace(operation.Summary))
    {

            
            #line default
            #line hidden
            this.Write("   * ");
            
            #line 71 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Summary ?? ""));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 72 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }
    foreach (var parameter in operation.Parameters)
    {

            
            #line default
            #line hidden
            this.Write("   * @param {");
            
            #line 77 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type.ToTypeScriptType()));
            
            #line default
            #line hidden
            this.Write("} ");
            
            #line 77 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name.ToLowerCamelCase()));
            
            #line default
            #line hidden
            
            #line 77 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(String.IsNullOrWhiteSpace(parameter.Description) ? "" : " " + parameter.Description));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 78 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }

            
            #line default
            #line hidden
            this.Write("   */\r\n  public ");
            
            #line 82 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 82 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(String.Join(", ", operation.Parameters.OrderBy(parameter => !parameter.IsRequired).Select(parameter => parameter.Name.ToLowerCamelCase() + (parameter.IsRequired ? "" : "?") + ": " + parameter.Type.ToTypeScriptType()))));
            
            #line default
            #line hidden
            this.Write("): Observable<");
            
            #line 82 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResponseType == null ? "any" : operation.ResponseType.ToTypeScriptType()));
            
            #line default
            #line hidden
            this.Write("> {\r\n");
            
            #line 83 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    var queryParameters = operation.Parameters.Where(p => p.Location == OperationParameterLocation.Query);
    var hasQueryParameters = queryParameters.Any();
    var headerParameters = operation.Parameters.Where(p => p.Location == OperationParameterLocation.Header);
    var hasHeaderParameters = headerParameters.Any();
    var bodyParameter = operation.Parameters.SingleOrDefault(p => p.Location == OperationParameterLocation.Body);
    var formParameters = operation.Parameters.Where(p => p.Location == OperationParameterLocation.FormData);
    var hasFormParameters = formParameters.Any();
    if (hasQueryParameters)
    {

            
            #line default
            #line hidden
            this.Write("    const params = ServiceHelper.getParams({\r\n      ");
            
            #line 95 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

        var first = true;
        foreach (var parameter in queryParameters)
        {
            if (!first)
            {

            
            #line default
            #line hidden
            this.Write(",\r\n      ");
            
            #line 102 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

            }

            
            #line default
            #line hidden
            
            #line 104 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Template.TransformServiceParameter(parameter)));
            
            #line default
            #line hidden
            
            #line 104 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

            first = false;
        }

            
            #line default
            #line hidden
            this.Write("\r\n    });\r\n");
            
            #line 110 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }
    if (hasFormParameters)
    {

            
            #line default
            #line hidden
            this.Write("    const body = ServiceHelper.getFormBody({\r\n      ");
            
            #line 116 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

            var first = true;
            foreach (var parameter in formParameters)
            {
                if (!first)
            {

            
            #line default
            #line hidden
            this.Write(",\r\n      ");
            
            #line 123 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

            }

            
            #line default
            #line hidden
            
            #line 125 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Template.TransformServiceParameter(parameter)));
            
            #line default
            #line hidden
            
            #line 125 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

            first = false;
        }

            
            #line default
            #line hidden
            this.Write("\r\n    });\r\n");
            
            #line 131 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }
    if (hasHeaderParameters)
    {

            
            #line default
            #line hidden
            this.Write("    const headers = ServiceHelper.getHeaders({\r\n      ");
            
            #line 137 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

            var first = true;
            foreach (var parameter in headerParameters)
            {
                if (!first)
            {

            
            #line default
            #line hidden
            this.Write(",\r\n      ");
            
            #line 144 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

            }

            
            #line default
            #line hidden
            
            #line 146 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Template.TransformServiceParameter(parameter)));
            
            #line default
            #line hidden
            
            #line 146 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

            first = false;
        }

            
            #line default
            #line hidden
            this.Write("\r\n    });\r\n");
            
            #line 152 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }
    var httpMethod = operation.HttpMethod.ToString().ToLowerCamelCase();
    var path = operation.Path.ToTypeScriptInterpolated();
    if (options.HasBaseUrl)
    {
        path = "${BASE_URL}" + path;
    }

            
            #line default
            #line hidden
            this.Write("    return this.http.");
            
            #line 161 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(httpMethod));
            
            #line default
            #line hidden
            
            #line 161 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    if (operation.ResponseType == null || operation.ResponseType is StringType)
    {
    }
    else if (operation.ResponseType.IsPrimitive())
    {

            
            #line default
            #line hidden
            this.Write("<");
            
            #line 167 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResponseType.ToTypeScriptType()));
            
            #line default
            #line hidden
            this.Write(">");
            
            #line 167 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }
    else if (operation.ResponseType is ArrayType)
    {

            
            #line default
            #line hidden
            this.Write("<any[]>");
            
            #line 171 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }

            
            #line default
            #line hidden
            this.Write("(`");
            
            #line 173 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(path));
            
            #line default
            #line hidden
            this.Write("`");
            
            #line 173 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    if (bodyParameter != null)
    {

            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 176 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

        // avoid string being interpreted as json
        if (bodyParameter.Type is StringType)
        {

            
            #line default
            #line hidden
            this.Write("JSON.stringify(");
            
            #line 180 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

        }

            
            #line default
            #line hidden
            
            #line 182 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bodyParameter.Name.ToLowerCamelCase()));
            
            #line default
            #line hidden
            
            #line 182 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

        if (bodyParameter.Type is StringType)
        {

            
            #line default
            #line hidden
            this.Write(")");
            
            #line 185 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

        }

            
            #line default
            #line hidden
            
            #line 187 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }
    if (hasFormParameters)
    {

            
            #line default
            #line hidden
            this.Write(", body");
            
            #line 191 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }

    // TODO: null body if patch without body
    var requestOptions = new List<string>();
    if (hasQueryParameters) {
        requestOptions.Add("params");
    }
    if (hasHeaderParameters) {
        requestOptions.Add("headers");
    }
    // avoid string being interpreted as json
    if (operation.ResponseType == null || operation.ResponseType is StringType)
    {
        requestOptions.Add("responseType: 'text'");
    }

    if (requestOptions.Any())
    {

            
            #line default
            #line hidden
            this.Write(", { ");
            
            #line 210 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(String.Join(", ", requestOptions)));
            
            #line default
            #line hidden
            this.Write(" }");
            
            #line 210 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    }

            
            #line default
            #line hidden
            this.Write(")");
            
            #line 212 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

    if (operation.ResponseType != null)
    {
        var responseType = operation.ResponseType;
        if (!responseType.IsPrimitive())
        {

            
            #line default
            #line hidden
            this.Write(".pipe(\r\n      map(response => ");
            
            #line 220 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Template.TransformConstructor(responseType, "response")));
            
            #line default
            #line hidden
            this.Write(")\r\n    )");
            
            #line 221 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write(";\r\n  }\r\n");
            
            #line 226 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

}

            
            #line default
            #line hidden
            this.Write("}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\Projects\CubidoVSTS\Cubido_Templates\cubido.OpenApi\cubido.OpenApi.Angular.Template\Generated\Service.tt"

private global::cubido.OpenApi.Models.Controller _controllerField;

/// <summary>
/// Access the controller parameter of the template.
/// </summary>
private global::cubido.OpenApi.Models.Controller controller
{
    get
    {
        return this._controllerField;
    }
}

private global::cubido.OpenApi.Angular.Template.ConvertOptions _optionsField;

/// <summary>
/// Access the options parameter of the template.
/// </summary>
private global::cubido.OpenApi.Angular.Template.ConvertOptions options
{
    get
    {
        return this._optionsField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool controllerValueAcquired = false;
if (this.Session.ContainsKey("controller"))
{
    this._controllerField = ((global::cubido.OpenApi.Models.Controller)(this.Session["controller"]));
    controllerValueAcquired = true;
}
if ((controllerValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("controller");
    if ((data != null))
    {
        this._controllerField = ((global::cubido.OpenApi.Models.Controller)(data));
    }
}
bool optionsValueAcquired = false;
if (this.Session.ContainsKey("options"))
{
    this._optionsField = ((global::cubido.OpenApi.Angular.Template.ConvertOptions)(this.Session["options"]));
    optionsValueAcquired = true;
}
if ((optionsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("options");
    if ((data != null))
    {
        this._optionsField = ((global::cubido.OpenApi.Angular.Template.ConvertOptions)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class ServiceBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
